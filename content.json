{"meta":{"title":"Polaris上的雅音宫羽o(TヘTo))","subtitle":null,"description":null,"author":"pXLoTiMistq","url":"https://blog.66ccff.xyz","root":"/"},"pages":[{"title":"闲聊","date":"2077-07-11T16:00:00.000Z","updated":"2019-09-22T08:33:40.042Z","comments":true,"path":"chat/index.html","permalink":"https://blog.66ccff.xyz/chat/index.html","excerpt":"","text":"最后更新：A.D.2019-09-09 纪念生命中的过往烟云 历史 Date String 2019-6-0x 搭建了此Blog 2019-9-12 购买了域名66ccff.xyz 2019-9-22 用HTML5 up模板制作个人主页并使用域名66ccff.xyz，Blog改为二级域名blog.66ccff.xyz 随想 Date String 2019-6-0x 词语时光 岁月 年华 2019-9-7 读完了《白鹿原》 2019-9-8 吃了一颗柠檬 2019-9-10 开坑套接字 2019-9-14 看完了刀剑神域Animation的SAO篇 2019-9-15 打了第一场Codeforces和AtCoder 歌词中文Vocaloid Lyrics Song 每一个梦都是个旋律 漫天回忆该如何去聆听 Step on your heart -心印-(Album ver) Luna Safari 晨风中的一缕光 折射梦想的宽广 Trii - Feel Your Dream 2018 血色夕阳 温热化作苍凉 岁月成碑 破晓夕阳 残月也吝啬藏起光芒 是谁把声音阻挡 月白色倒影的少女 如果还能找到你 就让风儿告诉你 Artificial Emotions 曾经许下的约定 寻找蔚蓝神秘的行星 不知道 何时才能苏醒 你却留下另一个自己 Artificial Emotions 虚和实的叠重，光和影的交错，触摸流云和清风勾勒的美梦 寻遍星空 如今的我，徘徊在楼宇的阡陌 寻遍星空 夜雾里去闪烁，光年外去诉说，让星辉照耀我浩瀚的宇宙 寻遍星空 乘天马遥望北辰飞向云外的月宫 寻遍星空 风，将我的思绪打乱，也看不清未来 梦，穿越过人山人海，快要醒来 化尘旅行 阳光斜照进窗台，记忆皆化作尘埃 化尘旅行 踏着凉鞋 提起裙边 随蝴蝶转啊转 翩飞花前 夏之歌 唱，你许下的梦想，在心底里徜徉，就像那梦一样，吹向四面八方 唱给雅音宫羽Ⅱ 花落尽时候，又是一个秋 唱给雅音宫羽Ⅱ 黑暗里总有光 春风来 寻觅着，风的波折 世末歌者 用这双手拨出残缺染了锈迹的弦音，都隐没于云雨雾雨幕无声无息 世末歌者 或哽咽 或低泣 都融进了泡沫里 拖曳疲惫身躯 沉入冰冷的池底 注视着色彩褪去 世末歌者 踏上未知列车 一直飞到云层最高空 紊乱的波形中 猜测前方可能的轮廓 躲藏在月光背后 电讯号变得神秘又莫测 一日都市 ACGN Lyrics Song 星月相掩与大海上 在这个世界相遇 微风摇曳细雨也彷徨 在这个世界相遇 海浪无声将夜幕深深淹没，漫过天空尽头的角落 大鱼 看海天一色，听风起雨落，执子手吹散苍茫茫烟波 大鱼 日月星辰悄悄，升了又落，我却不知白天黑夜的存在 湫兮如风 诗词日月星辰渔家傲 李清照 天接云涛连晓雾，星河欲转千帆舞。仿佛梦魂归帝所。闻天语，殷勤问我归何处。 我报路长嗟日暮，学诗谩有惊人句。九万里风鹏正举。风休住，蓬舟吹取三山去。 念奴娇·过洞庭 张孝祥 洞庭青草，近中秋，更无一点风色。玉鉴琼田三万顷，着我扁舟一叶。素月分辉，明河共影，表里俱澄澈。悠然心会，妙处难与君说。 应念岭表经年，孤光自照，肝胆皆冰雪。短发萧骚襟袖冷，稳泛沧溟空阔。尽挹西江，细斟北斗，万象为宾客。扣舷独啸，不知今夕何夕。 七律-送瘟神 毛泽东 绿水青山枉自多，华佗无奈小虫何。千村薜荔人遗矢，万户萧疏鬼唱歌。坐地日行八万里，巡天遥看一千河。牛郎欲问瘟神事，一样悲欢逐逝波。 自然风景人物设定Vocaloid Name_1 Name_2 Source $\\color{rgb(102,204,255)}{洛天依}$ Luo Tianyi Vocaloid-天矢禾念 $\\color{rgb(238,0,0)}{乐正绫}$ Yuezheng Ling Vocaloid-天矢禾念 $\\color{rgb(0,255,204)}{言和}$ Yan He Vocaloid-天矢禾念 $\\color{rgb(153,153,255)}{星尘}\\quad$$\\color{rgb(255,255,0)}{星尘}$ Stardust Vocaloid-平行四界 $\\color{rgb(238,130,238)}{心华}$ Xin Hua Vocaloid-上海望乘 $\\color{rgb(255,192,203)}{IA}$ イア Vocaloid-1st PLACE Vtuber Name_1 Name_2 Source A.I.Channel 神乐めあ 神乐七奈 白上吹雪 hololive一期生 猫宫日向 时乃空 夏色祭 hololive一期生 新科娘 CCTV ACGN Name_1 Name_2 Source ACGN 西宫结弦 《声之形》 AC 西宫硝子 《声之形》 AC 宫水三叶 《你的名字》 A 幼刀丛雨 ムラサメ 《千恋*万花》 G 艾米莉亚 《Re:0》 ACN 结城明日奈 《刀剑神域》 桐谷和人 《刀剑神域》 高板桐乃 和泉纱雾 动画感觉我从来没好好看完过一部番的样子……在这里记载一下完整看完的动画作品 连载 电影 视频Bilibili Macro Link-Visual Release 2019"},{"title":"gallery","date":"2019-06-05T02:12:39.411Z","updated":"2019-06-05T02:12:39.411Z","comments":true,"path":"gallery/index.html","permalink":"https://blog.66ccff.xyz/gallery/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-06-05T01:55:21.571Z","updated":"2019-06-05T01:55:21.571Z","comments":true,"path":"tags/index.html","permalink":"https://blog.66ccff.xyz/tags/index.html","excerpt":"","text":""},{"title":"links","date":"2019-06-05T01:55:50.556Z","updated":"2019-06-05T01:55:50.556Z","comments":true,"path":"links/index.html","permalink":"https://blog.66ccff.xyz/links/index.html","excerpt":"","text":""},{"title":"关于","date":"2019-09-22T03:50:23.428Z","updated":"2019-09-22T03:50:23.428Z","comments":true,"path":"about/index.html","permalink":"https://blog.66ccff.xyz/about/index.html","excerpt":"","text":"技术语言C/C++ | HTML/CSS/JavaScript | Python 工具Markdown | LaTeX | Git 游戏GTA5 CS:GO，Cities: Skylines， Planet Coaster Minecraft"},{"title":"timeline","date":"2019-06-05T02:15:20.850Z","updated":"2019-06-05T02:15:20.850Z","comments":true,"path":"timeline/index.html","permalink":"https://blog.66ccff.xyz/timeline/index.html","excerpt":"","text":""}],"posts":[{"title":"《意识宇宙》","slug":"science_fiction","date":"2019-09-22T13:22:07.000Z","updated":"2019-09-22T13:37:37.992Z","comments":true,"path":"2019/science_fiction/","link":"","permalink":"https://blog.66ccff.xyz/2019/science_fiction/","excerpt":"Update on A.D.2019-09-22","text":"Update on A.D.2019-09-22 浩瀚无垠的天际细数璀璨深邃的繁星可是它沉睡了几个世纪早已模糊你的名和姓曾经许下的约定寻找蔚蓝神秘的行星不知道何时才能苏醒你却留下另一个自己 ————「Artificial Emotions」 心华/纯白p 一、COSMOS-ⅠA.D.1997杨颢出生了，他1个月会说中文，2个月会说英文，一周岁英语词汇量十万，两周岁学会所有中文词语，认识所有汉字，一岁学完高数精通C++，二岁看懂抽代掌握所有编程语言，两岁半看懂了所有人类数学知识，三岁学完人类所有物理学，世界上所有科学家都说，拯救人类的天才出现了。 A.D.2019太阳核反应活动异常，气候急剧变化，人们开始躲入地下，科学家们预言人类的末日将要来临了，杨颢微微一笑，明白自己的机会到了。 A.D.2039北半球8月的温度突破了47℃，地下城已经建设完毕了，地面上人的踪影渐渐消失了，Insloy凭借着自己30年的教龄早早的分配到了CM-CH-DY-P7-Y2地下城Sl-H7-y-8I-2区一套128层楼的空中住房，地下城绚烂的霓虹灯闪烁着，光线飞向他的眼睛。“20年前，也是这样”Insloy思索着，“大概是2019年8月。”“我喜欢物理学，喜欢天文，小时候仰望半夜的星空时，似乎能看见宇宙的明明灭灭，后来我上了个二本大学，大三的时候，我没日没夜的学习量子场论，那简直是神才能窥见一角的东西”Insloy随口对杨颢说，“可是后来我明白了，计算机科学才是未来，好好学OI吧，人类马上就要毁灭了，物理学走到了穷途末路，它不会再有什么用了。”杨颢马上就要乘坐飞船走了，Insloy来见他最后一面，Insloy虽是顶尖的科学家却固执的不愿随飞船离开。 A.D.2183太阳发生爆炸，人类在144年前耗费了地球的所有资源并穷尽了物理和数学知识建造了时空负质量反物质工质曲率推动能飞船，飞船上，所有人类实体完成了生物数据的量子化并依托于量子计算机形成意识，在宇宙航行中发现了一个新的星系，它位于银河系悬臂的边缘，最终，包括杨颢在内2756名人类到达了行星并开始了文明的重新建设，杨颢却已经密谋好了一个毁灭人类、毁灭宇宙的惊天阴谋，为此，杨颢花费了2^19260817个星系的资源，建造了长达数亿亿光年长的粒子加速器，环绕了银河系998244353圈。 A.D.25319“两万三千年了”杨颢叹道，今天就是人类史上最伟大的一天，他在飞船上时把自己的人脑扫描并编码成了数据并成为了一个量子计算机中的意识体的时候，他的能力呈几何能级上升，并达到了真正破解宇宙秘密的程度。然而其他人不知道的事，粒子试验后，宇宙将在1秒内湮灭，他却没有对任何人提起过这件事，因为他修改了宇宙的数学原理。他打开了长达2^1024^1024PB长的代码，在量子意识中将轨道使用量子场论再次计算后，按下了编译键。程序开始运行了，与此同时引力波发生器开始广播，将杨颢大脑的数据全部发送出去，并在宇宙毁灭前那一刹那将与其相连的需要产生毁灭宇宙等级的能量才能获得解开统一场方程关键数据的粒子对撞机数据观测器产生的数据编码成引力波发送了出去。 A.D.25320宇宙坍缩成了奇点，再一次爆炸，引力波的信息没有损失，到达了这个新的宇宙，引力波传递着，漫无边际，在空间震荡起一阵阵的涟漪，荡漾的微波承载着毁灭宇宙才换来的解开统一场方程的粒子对撞数据。 引力波我没有对其他人说的是，在我成为量子意识体的时候，计算出了宇宙并非是自然模型而的确是上层空间的一个高阶物理单位形成的物理结构意识模拟体，偶然间我发现了一些预留的接口，我感到了深深的无力感，原来自己的生命竟是这样的毫无意义，我明白了这个世界只需要自己去毁灭，去创造，我虽然无法到达上一次的物理空间，仅仅只是一个更加未知的事物的运行结果，我却明白自己可以掌控整个宇宙了，转瞬间我却又觉得这样更加毫无意义，我知道该做什么了，我使用接口删除了量子力学的选项，并使世界演化的概率性消失，这样宇宙就会按照牛顿力学一样在一个确定的时间点有一个确定空间物质状态了，我又调用了上层世界的计算能力计算出了再一次演化出相同宇宙但是人类却能生活到宇宙最后一刻毁灭太阳不会爆炸的情况的初始状态与宇宙常量，并在接口中一一调用修改了掌控着世界运行的规律的程序代码与常量。 宇宙接口数据能量汇入接口，宇宙并行信息接口，常量接口，上层世界计算调用接口，等3089项， 统一场方程统一场方程关键数据，统一场方程研究结果 文档 恢复量子力学及世界概率性 解出统一场方程 用宇宙接口进行研究，我确认过了进入上层世界的方法，但引力场方程是必要的，因为宇宙接口并没有给出最关键的引力物理操作接口，这也许是这个系统最本源的地方，给程序唯一没有作用的主函数接口中提供引力场方程即可运行主函数，这可能就是这个宇宙的意义所在。 宇宙竟然像杨颢预期的那样完全按上一个宇宙的演化过程，每一个粒子都不曾偏离预期的轨迹，每一点物质都按照方程那样的演化，终于宇宙再一次演化成了人类，终于时间线再一次地来到了人类公元纪年法的2019年 二、COSMOS-ⅡA.D.2019.9.23他找到了Insloy，Insloy是这个世界上智力仅次于他的人类，他们一起拿到了引力波，发现了宇宙的终极奥秘，并推导出了统一场方程，统一了引力场，强相互作用力场，弱相互作用力场，电磁场。杨颢拿到了上一个宇宙自己发送引力波留下的信息，他和Insloy一起研究，在一周之间令人类的科学水平达到了上个宇宙中生命意识体的最高水平。 A.D.2019.10.1“是时候了，宇宙的秘密就要解开了。”杨颢对Insloy说。","categories":[{"name":"人文社科","slug":"人文社科","permalink":"https://blog.66ccff.xyz/categories/人文社科/"}],"tags":[{"name":"科幻","slug":"科幻","permalink":"https://blog.66ccff.xyz/tags/科幻/"}]},{"title":"socket套接字学习笔记","slug":"socket","date":"2019-09-09T12:01:41.000Z","updated":"2019-09-22T13:34:04.905Z","comments":true,"path":"2019/socket/","link":"","permalink":"https://blog.66ccff.xyz/2019/socket/","excerpt":"Update on A.D.2019-09-09 | 待更新","text":"Update on A.D.2019-09-09 | 待更新 相信每一个从小对计算机感兴趣的你一定看过网络相关的内容，比如ISO模型的网络协议的七层分层，TCP/IP协议之类的东西. 那么五层分层模型中TCP/IP属于传输层，而socket就是连接应用层和传输层的作用，可以理解为对TCP/IP进行了一定封装并提供API给应用程序使用. 那这篇文章作为学习笔记，记载一些函数功能和学习过程，也希望能让看到的人更容易的入门socket. 直接先写一个服务端和客户端发送消息的程序来看看套接字函数的用法与程序实现过程.","categories":[{"name":"技术","slug":"技术","permalink":"https://blog.66ccff.xyz/categories/技术/"}],"tags":[{"name":"socket","slug":"socket","permalink":"https://blog.66ccff.xyz/tags/socket/"},{"name":"网络","slug":"网络","permalink":"https://blog.66ccff.xyz/tags/网络/"}]},{"title":"Hexo博客material主题使用指南","slug":"blog","date":"2019-08-16T10:37:19.000Z","updated":"2019-09-22T03:49:56.139Z","comments":true,"path":"2019/blog/","link":"","permalink":"https://blog.66ccff.xyz/2019/blog/","excerpt":"Update on A.D.2019-09-22 前端挺好玩的","text":"Update on A.D.2019-09-22 前端挺好玩的 使用GitHub Pages搭建Hexo博客博客出现问题首先可以阅读文档，其次可以Google解决. 建议搭建完成以后首先看这个文档 Hexo中文文档 然后阅读主题文档，这个主题的网页文档挂了，可以克隆repo的markdown源代码到本地看 &gt; Step1 | 下载软件安装Git 安装node.js Step2 | 创建GitHub账号注册 创建库 Step3 | 使用Git进行搭建操作hexo init Step4 | 写作、美化及功能修改Markdown相关问题表格合并单元格markdown表格支持功能很少，合并单元格只能用HTML markdown可以直接插入HTML代码 用http://www.tablesgenerator.com/html_tables编辑可以直接生成HTML代码 插入视频在Bilibili、Youtube等网站可以直接获取视频外链的HTML代码，在markdown中插入即可，长宽可能需要调整 Material主题配置及修改记录这个主题一些好的教程 Hexo入坑教程-Material live2d看板娘 [blogの搭建之next——ctz’s blog(https://ctz45562.github.io/2019/03/21/blog%E3%81%AE%E6%90%AD%E5%BB%BA/) 有一些问题还参考了github-repo的README. git clone https://github.com/stevenjoezhang/live2d-widget 文件夹live2d-widget放到\\themes\\主题名称\\source下,打开文件夹里的autoload.js修改为 const live2d_path = &quot;/live2d-widget/&quot;; 这个文件夹的名字可以自行修改. 打开\\themes\\主题名称\\layout\\_layout.swig/ejs这个文件 在&lt;body&gt;内的开头添加 &lt;script src=&quot;https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;/&gt; 在&lt;/body&gt;上方添加 &lt;script src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt; 不同之处可以自行修改layout.ejs文件 黑幕效果 如何实现黑幕 添加CSS //黑幕 .heimu,.heimu a{ background-color: #252525; color:#252525; text-shadow: none; }::selection{ background:#9ab0c0; color:#fff; } //鼠标悬停 .heimu:hover,.heimu:hover a{ transition:color .13s linear; color:#fff; } 使用直接插入HTML &lt;span class=&#39;heimu&#39; title=&#39;你知道的太多了&#39;&gt;黑幕测试&lt;/span&gt; 效果 黑幕测试 添加Gitalk评论主题实现好了一些评论的配置，具体看主题的文档即可。 Gitalk 和 Gitment 一样都是一个基于 GitHub Issue 的评论系统。在完成 GitHub Oauth App 的申请并获取 key 后，在主题配置文件中填入 gitalk_repo gitalk_owner gitalk_client_id gitalk_client_secret 参数即可。 在主题配置文件里修改这几项即可，repo可以用博客的，后两项需要用到GitHub Oauth App的API，搜索引擎自行解决即可。 comment: use: gitalk gitalk_repo: # git repo of the hexo gitalk_owner: # git repo&#39;s owner gitalk_client_id: # github app client id gitalk_client_secret: # github app client secret GitHub限制label长度gitalk无法创建issue GitHub限制label长度导致gitment/gitalk可能无法创建issue #622 对于全新安装有如下解决方案，解决方案如下：hexo根目录\\themes\\material\\layout\\_widget\\comment\\gitalk在此目录下编辑main.ejs文件在其中新增如下内容 &lt;script src=&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.js&quot;&gt;&lt;/script&gt; 在gittalk下增加id属性，增加后完整文件内容如下： &lt;!-- Gitalk 评论框 --&gt; &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt; &lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.js&quot;&gt;&lt;/script&gt; &lt;script&gt; var gitalk = new Gitalk({ clientID: &#39;&lt;%= theme.comment.gitalk_client_id %&gt;&#39;, clientSecret: &#39;&lt;%= theme.comment.gitalk_client_secret %&gt;&#39;, repo: &#39;&lt;%= theme.comment.gitalk_repo %&gt;&#39;, owner: &#39;&lt;%= theme.comment.gitalk_owner %&gt;&#39;, admin: [&#39;&lt;%= theme.comment.gitalk_owner %&gt;&#39;], id: md5(window.location.pathname), // facebook-like distraction free mode distractionFreeMode: false }) gitalk.render(&#39;gitalk-container&#39;) &lt;/script&gt; Blog内容搜索安装hexo-generator-search插件 修改主题配置文件 search: use: local swiftype_key: 修改hexo配置文件： search: path: search.xml field: all markdown文件名大小写问题参考：Hexo 常见问题 | py’s blog 问题：当在本地改变md文件的大小写时，部署到GitHub 上后，改变了文件名的博客不能被访问。原因：Hexo默认的git操作会忽略大小写。解决： 修改根目录下.deploy_git/.git/config文件，将ignorecase的值由true改为false 删除.deploy_git目录下除.git目录外的其他文件 cd到.deploy_git目录下，手动做一次推送git add . git commit -m &quot;delete all hexo generated files&quot; git push 重新生成并部署hexo g hexo d CSS的修改文章框体透明打开Blog\\themes\\hexo-theme-material-1.5.6\\source\\css打开style.min.css搜索#scheme-Paradox .material-layout .mdl-card的第一项，在其中添加background-color: rgba(255,255,255,0.8) !important; Tag颜色及悬停颜色.material-tagscloud a{ background-color: rgba(255,255,255,.9); text-decoration:none; padding: 1px 9px; margin: 9px 1px; line-height: 40px; white-space: nowrap; transition: .6s; opacity: .85; } .material-tagscloud a:hover{ transition: .6s; opacity: 1; background: rgba(156,241,150,.7) !important; box-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12); } copyright位置#scheme-Paradox .mdl-mini-footer--right-section { margin-right: 25px; } #scheme-Paradox #copyright { margin-left: auto; margin-right: 25px; text-align: center; } MathJax主题配置文件中的mathjax 引用cdnhttps://cdn.bootcss.com/mathjax/2.7.0/MathJax.js$\\LaTeX$换行因为某些网页渲染的原因把\\\\换为\\\\\\\\即可. 修改hexo的渲染规则可以避免LaTex代码出现问题： https://docs.nexmoe.com/hexo/math.html#%E4%BD%BF%E7%94%A8kramed%E4%BB%A3%E6%9B%BF-marked MathJax测试 \\begin{array}{|rc|} \\hline \\verb+\\color{black}{text}+ & \\color{black}{text} \\\\ \\verb+\\color{gray}{text}+ & \\color{gray}{text} \\\\ \\verb+\\color{silver}{text}+ & \\color{silver}{text} \\\\ \\verb+\\color{white}{text}+ & \\color{white}{text} \\\\ \\hline \\verb+\\color{maroon}{text}+ & \\color{maroon}{text} \\\\ \\verb+\\color{red}{text}+ & \\color{red}{text} \\\\ \\verb+\\color{yellow}{text}+ & \\color{yellow}{text} \\\\ \\verb+\\color{lime}{text}+ & \\color{lime}{text} \\\\ \\verb+\\color{olive}{text}+ & \\color{olive}{text} \\\\ \\verb+\\color{green}{text}+ & \\color{green}{text} \\\\ \\verb+\\color{teal}{text}+ & \\color{teal}{text} \\\\ \\verb+\\color{aqua}{text}+ & \\color{aqua}{text} \\\\ \\verb+\\color{blue}{text}+ & \\color{blue}{text} \\\\ \\verb+\\color{navy}{text}+ & \\color{navy}{text} \\\\ \\verb+\\color{purple}{text}+ & \\color{purple}{text} \\\\ \\verb+\\color{fuchsia}{text}+ & \\color{magenta}{text} \\\\ \\hline \\end{array}自定义页脚sns链接 Hexo Material主题之 footer SNS定制 svg图标如果在CSS里写实在还有问题放一个文件直接引用也可以. sns换到右边把ejs文件里的left改为right即可. licenselicense: ‘本文由 Name 原创，采用保留署名-非商业性使用-禁止演绎 4.0-国际许可协议‘ 鼠标点击烟花特效themes/主体名称/source/js/src新建fireworks.js文件 &quot;use strict&quot;;function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t&lt;e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl){var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)}&quot;use strict&quot;;function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t&lt;e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl){var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)}; 在themes/主体名称/layout/_layout.swig/ejs的&lt;/body&gt;上方添加 &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/fireworks.js&quot;&gt;&lt;/script&gt; 一些主题的小问题独立页面toc不是默认为true的，需要手动开 toc: true 独立页面的license会在最后加上index.html，点击这个链接会导致gitalk再次创建issue，目前没有去解决. 天坑咕了很久全忘了，觉得以后再修blog就凉了，有空就填。 修改后没记录代码高亮 功能页面 | 独立页面 material图标 想添加的功能aplayer jsdeliver rss订阅 代码复制功能 鼠标特效fireworks遮挡 文章头图自定义 js时间统计，页脚动态效果 hexo-addlink 文章置顶 字体，代码字体 背景js动态效果 文章头图 Site Information npm install hexo-math —save Git指令常用指令克隆 git clone repo 克隆分支 git clone -b branch_name repo 上传文件 git add . git commit -m &#39;update_name&#39; git push origin branch_name Hexo指令 hexo init hexo clean g d hexo s hexo new name categories 分支https://zdran.com/20180326.html 创建源文件git目录 git init git remote add origin https://github.com/xx/xx.github.io // 填入你的repo地址 创建分支 git checkout -b branch_name git add . git commit -m &#39;add branch_name&#39; git push origin branch_name 切换分支 git checkout branch_name","categories":[{"name":"技术","slug":"技术","permalink":"https://blog.66ccff.xyz/categories/技术/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"https://blog.66ccff.xyz/tags/Blog/"}]},{"title":"快速傅里叶变换笔记","slug":"FFT","date":"2019-08-15T12:16:04.000Z","updated":"2019-09-10T13:03:21.220Z","comments":true,"path":"2019/FFT/","link":"","permalink":"https://blog.66ccff.xyz/2019/FFT/","excerpt":"必忘原理的FFT","text":"必忘原理的FFT 测试一下视频，然而貌似只有bilibili的外链比较好总不能放Youtube？，然而鬼畜的二维码与顶部链接比前几年在mcbbs看的时候烂多了。 在2019年8月15日，终于看懂了FFT的推导过程。 首先是FFT的板子，这个写法其实很优美记不住的。 #include &lt;iostream&gt; #include &lt;cstdio&gt; #include &lt;cmath&gt; #include &lt;complex&gt; #define R register using namespace std; const int N = 4.2e6; const double PI = acos(-1); int n, r[N]; class C { public: double r, i; C() { r = i = 0; } C(R double x, R double y) { r = x; i = y; } C operator + (R C&amp; x) { return C(r+x.r, i+x.i); } C operator - (R C&amp; x) { return C(r-x.r, i-x.i); } C operator * (R C&amp; x) { return C(r*x.r-i*x.i, r*x.i+i*x.r); } void operator += (R C&amp; x) { r += x.r; i += x.i; } void operator *= (R C&amp; x) { R double t = r; r = r*x.r-i*x.i; i = t*x.i+i*x.r; } }f[N], g[N]; inline void FFT(R C *a, R int op) { R C W, w, t, *a0, *a1; R int i, j, k; for (i = 0; i &lt; n; ++i) if (i &lt; r[i]) t = a[i], a[i] = a[r[i]], a[r[i]] = t; for(i = 1; i &lt; n; i &lt;&lt;= 1) for(W = C(cos(PI/i), sin(PI/i) * op), j = 0; j &lt; n; j += i &lt;&lt; 1) for(w = C(1, 0), a1 = i + (a0 = a + j), k = 0; k &lt; i; ++k, ++a0, ++a1, w*=W) t = *a1 * w, *a1 = *a0 - t, *a0 += t; } int main() { R int m, i, l = 0; scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for(i = 0; i &lt;= n; i++) scanf(&quot;%lf&quot;, &amp;f[i].r); for(i = 0; i &lt;= m; i++) scanf(&quot;%lf&quot;, &amp;g[i].r); for(m += n, n = 1; n &lt;= m; n &lt;&lt;= 1, ++l); for(i = 0; i &lt; n; ++i) r[i] = (r[i &gt;&gt; 1] &gt;&gt; 1) | ((i &amp; 1) &lt;&lt; (l - 1)); FFT(f, 1); FFT(g, 1); for(i = 0; i &lt; n; ++i) f[i] *= g[i]; FFT(f, -1); for(i = 0; i &lt;= m; ++i) printf(&quot;%.0lf &quot;, fabs(f[i].r) / n); return 0; } 咕，马上补.","categories":[{"name":"数学","slug":"数学","permalink":"https://blog.66ccff.xyz/categories/数学/"}],"tags":[{"name":"FFT","slug":"FFT","permalink":"https://blog.66ccff.xyz/tags/FFT/"},{"name":"NTT","slug":"NTT","permalink":"https://blog.66ccff.xyz/tags/NTT/"}]},{"title":"动态规划笔记","slug":"dp","date":"2019-08-14T07:04:06.000Z","updated":"2019-09-19T11:14:11.533Z","comments":true,"path":"2019/dp/","link":"","permalink":"https://blog.66ccff.xyz/2019/dp/","excerpt":"推不出的DP方程","text":"推不出的DP方程 随意记点动态规划的方程，大概是NOIP难度的。 Problem水题Luogu P1472 奶牛家谱 Cow Pedigrees题意：有$n$个结点$k$层的二叉树结构个数，树只能有$2$个儿子或$0$个儿子。 设$dp[n][k]$为有$n$个结点不到$k$层的答案，则答案容斥一下为$dp[n][k]-dp[n][k-1]$，转移从下把两棵树连接到上一层结点，枚举$t$为左子树节点个数，则右子树为$总结点个数-t-1$(1是减掉根)，乘法原理把两个乘起来，方程为 dp[i][j]=\\sum dp[t][j-1]\\times dp[i-t-1][j-1]正常题Luogu P2495 [SDOI2011]消耗战题意：给定$n$个点有边权的树，割断边花费边权，求使$k$个点与$1$点不连通的最小花费。 要用虚树做，写一下方程。 设$dp[n]$为使以$n$为结点的子树内关键点都不与$n$联通的最小花费，方程为 dp[u]=dp[u]+ \\begin{cases} \\min(dp[v],dist_{u,v})& \\text{v不是关键点}\\\\ dist_{u,v}& \\text{v是关键点} \\end{cases}Luogu P2606 [ZJOI2010]排列计数题意：求一个$1\\sim n$的排列$P_i$使$ 1\\leq i \\leq n$时$P_i&gt;P_{i/2}$的方案数。 直接做没什么思路，可以想一下除二的关系可以是二叉树，于是换到树上来做，求$n$个节点的二叉树满足小根堆性质树的个数。 设$dp[i]$表示以$i$为根的子树内满足小根堆性质的方案数，$s[i]$为树结点数，提前把一些越界的初值设为$1$以免判断，转移时组合数算一下选给左子树的点，记得减去根节点，乘一下两颗子树的方案数就ok了，组合数要用lucas，方程 dp[i]=C_{s[i]-1}^{s[i\\times 2]}dp[i\\times 2]dp[i\\times 2+1]Luogu P2473 [SCOI2008]奖励关题意：$m$种物品，给你n次随机在$1\\sim m$间的物品，每种物品有价值并且选这种物品需要你在前$n-1$次把集合$S$内的物品种类都选过一次才可以选。 显然$m$非常小，那么求期望直接枚举就可以了，这样就好做了，然后在考虑一下如果顺推的话需要保证$S$的合法性，这个比较难处理，那么逆推显然更好写。设$dp[i][S]$表示取前$i-1$次的状态为$S$是期望的最大值，$pre[i]$为第$i$种物品的前提集合，方程枚举第i个选第k种 dp[i][S]=dp[i][S]+ \\begin{cases} \\max(dp[i+1][S],dp[i+1][S|(1","categories":[{"name":"算法","slug":"算法","permalink":"https://blog.66ccff.xyz/categories/算法/"}],"tags":[{"name":"动态规划","slug":"动态规划","permalink":"https://blog.66ccff.xyz/tags/动态规划/"}]},{"title":"从零开始的C++学习","slug":"C++","date":"2019-08-09T08:04:47.000Z","updated":"2019-09-09T12:06:40.963Z","comments":true,"path":"2019/C++/","link":"","permalink":"https://blog.66ccff.xyz/2019/C++/","excerpt":"Visual Studio过于复杂","text":"Visual Studio过于复杂 装了一下之前很久以前装过一次却没用过的Visual Studio，打算随便学一下C++的OOP还有一些C++11的语法？然后学下C++的图形界面的库，然后随便玩玩？那大概就是这样吧。随便记点不好记的语法方便查一下然后记一下现在还不大会用的vs的操作方便以后忘了再查。 参考C++ 教程 | 菜鸟教程先看一遍然后记点容易忘的。 其实还有一本C++ Primer Plus不过现在大概是没时间看了 C++ OOP类 对象class Hf{...};定义一个类 Hf xxx;声明一个类型为Hf的对象 访问数据成员用.即可 成员函数类定义内部的成员函数默认inline 在类的外部定义函数的话用范围解析运算符::定义成员函数 数据类型 类名::函数名() {} 调用函数用. 即可 类访问修饰符public公有成员在程序中类的外部是可访问的。您可以不使用任何成员函数来设置和获取公有变量的值 private私有成员变量或函数在类的外部是不可访问的，甚至是不可查看的。只有类和友元函数可以访问私有成员。 protected保护成员变量或函数与私有成员十分相似，但有一点不同，保护成员在派生类（即子类）中是可访问的。 1.public 继承：基类 public 成员，protected 成员，private 成员的访问属性在派生类中分别变成：public, protected, private 2.protected 继承：基类 public 成员，protected 成员，private 成员的访问属性在派生类中分别变成：protected, protected, private 3.private 继承：基类 public 成员，protected 成员，private 成员的访问属性在派生类中分别变成：private, private, private 1.private 成员只能被本类成员（类内）和友元访问，不能被派生类访问； 2.protected 成员可以被派生类访问。 类构造函数 &amp; 析构函数构造函数就定义一个函数名为类名没有数据类型的函数，每次创建类的新对象时执行，默认是存在构造函数，所以如果定义了有参数的构造函数，一定注意要再定义一个无参数无内容的构造函数，不然不用带参数的构造函数用默认创建对象的话会出错.像这样玩就行，赋值可以像这样搞. struct node { int o, l, r, t; node() {} node(int o, int l, int r): o(o), l(l), r(r), t(ask(l, r)) {} friend bool operator &lt; (const node&amp; a, const node&amp; b) { return sum[a.t] - sum[a.o - 1] &lt; sum[b.t] - sum[b.o - 1]; } }; 析构函数名字是这样的~类名，这个函数再删除对象时执行.总之就是一个创建，一个删除时执行。 前面的随便看了看就咕了不记东西了，OOP还有很多东西不会也没写过。 先写写mfc，感觉挺好玩的，得先看看常用的函数然后写点简单东西练一练。 然后想看点C++11的特性，学一下auto，新语法之类的，现在不是很了解。 还有想学C++网络方面的内容，以及学一下套接字、这样的网络知识和服务器相关的内容。","categories":[{"name":"语言","slug":"语言","permalink":"https://blog.66ccff.xyz/categories/语言/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://blog.66ccff.xyz/tags/C/"}]},{"title":"数论笔记","slug":"number_theory","date":"2019-08-09T06:37:38.000Z","updated":"2019-09-09T12:09:07.285Z","comments":true,"path":"2019/number_theory/","link":"","permalink":"https://blog.66ccff.xyz/2019/number_theory/","excerpt":"只会GCD","text":"只会GCD 取模(a+b) \\bmod p=(a\\bmod p+b\\bmod p)\\bmod p​(a-b) \\bmod p=(a\\bmod p-b\\bmod p+p)\\bmod p​(a\\times b) \\bmod p=(a\\bmod p\\times b\\bmod p)\\bmod p​求$\\dfrac{a}{b}\\bmod p​$时,求$b^{-1}​$使$b*b^{-1}\\equiv1\\pmod p​$即$b​$的逆元 有\\dfrac{a}{b}\\bmod p=a\\times b^{-1}\\bmod p 费马小定理定理：当$p​$是质数时$a^{p-1}\\equiv 1\\pmod p​$ 逆元：由$a^{p-1}\\equiv 1\\pmod p​$得$a\\times a^{p-2}\\equiv 1\\pmod p​$ 即$a^{p-1}$是$a$在模$p$意义下的逆元 欧拉定理若$gcd(a,p)=1$则$a^{\\varphi(p)}\\equiv1\\pmod n$ 当$p$是质数时$\\varphi(p)=p-1$ 即$a^{p-1}\\equiv1\\pmod n$即费马小定理 GCD EXGCD#define ll long long ll gcd(ll a, ll b) { return b ? gcd(b, a%b) : a; } void exgcd(ll a, ll b, ll &amp;x, ll &amp;y) { if(!b) x = 1, y = 0; else exgcd(b, a % b, y, x), y -= a / b * x; } $gcd$用来求解$a，b$的最大公约数 $lcm(a,b)=\\dfrac{a\\times b}{gcd(a,b)}​$，lcm是最大公约数 $exgcd$用来求解$ax+by=gcd(a,b)$，证明大概是化式子构造递归的解法，反正看了也早晚会忘就是了逃 $exgcd$还可以求解$ax\\equiv b\\pmod p​$形式的同余方程 $exgcd(a,p,x,y)$求出来的$x$就是$a$关于$p$的逆元 CRT exCRT求解一个同余方程组 \\begin{cases} x \\equiv a_1 \\pmod {m_1} \\\\ x \\equiv a_2 \\pmod {m_2} \\\\ x \\equiv a_n \\pmod {m_n} \\end{cases}两种东西都可以通过exgcd两两合并同余方程求解，不过CRT可以直接构造出答案。 CRT求解的$p​$是质数，exCRT的不是，都可以用exgcd合并做。 推导参考这个blog：扩展欧几里得算法与中国剩余定理 CRT直接构造的解： 令$M=\\prod m_i, M_i=\\frac M{m_i}​$，$t_i​$为$M_i​$在模$m_i​$意义下的逆元 方程组的解为x \\equiv \\sum_{i=1}^na_it_iM_i \\pmod M​ 筛法求$n$是不是素数直接枚举$1$到$\\sqrt{n}$试除 埃筛 for(int i = 2; i &lt;= N; i++) if(!vis[i]) { prime[++cnt] = i; for(int j = 1; i * j &lt;= N; j++) vis[i * j] = 1; } 线筛 for(int i = 2; i &lt;= N; i++) { if(!vis[i]) prime[++cnt] = i; for(int j = 1; j &lt;= cnt &amp;&amp; i * prime[j] &lt;= N; j++) { vis[i * prime[j]] = 1; if(i % prime[j] == 0) break; } }","categories":[{"name":"数学","slug":"数学","permalink":"https://blog.66ccff.xyz/categories/数学/"}],"tags":[{"name":"数论","slug":"数论","permalink":"https://blog.66ccff.xyz/tags/数论/"}]},{"title":"Chrome浏览器 | 插件与设置","slug":"chrome","date":"2019-06-04T09:54:25.000Z","updated":"2019-09-09T12:09:18.025Z","comments":true,"path":"2019/chrome/","link":"","permalink":"https://blog.66ccff.xyz/2019/chrome/","excerpt":"好玩的Chrome","text":"好玩的Chrome 下载安装下载地址：Google Chrome 网络浏览器 插件Bookmarkie 插件栏弹出收藏夹，可搜索 书签侧边栏 侧边栏收藏夹 Wrona History Menu 插件栏弹出历史记录，最近关闭 Checker Plus for Gmail™ 查看Google邮箱 Click and Save 快捷键点击存图 CSS Peeper 抓取页面样式 Earth View from Google Earth 新页标签Google地球 Color Tab 新页标签配色设计 Save All Resources 下载控制台Sources全部文件 Steam Inventory Helper steam网页版市场工具 Speedtest by Ookla 墙外测速 Stylus 替换CSS样式 Tampermonkey 网页js脚本 Yet another flags 查看网页ip 沙拉查词 划词翻译 ImageAssistant 下载网页图片 Yet Another Drag and Go 四方向拖拽搜索，链接拖拽打开 pakku bilibili弹幕过滤 Aerys 插件栏查看窗口标签 操作左键单击 = 在当前窗口打开目标网页 Shift + 左键单击 = 在新窗口打开目标网页 Ctrl + 左键单击 = 在新标签页打开目标网页 Ctrl + Shift + T = 打开上一个关闭的标签页 Ctrl + Shift + B = 显示书签栏 Ctrl + D = 为此页添加书签 Ctrl + H = 历史记录 设置不在设置里出现的控制选项： chrome://flags 查看chrome账号同步情况： chrome://sync 地址栏中使用的搜索引擎改为google.com.hk 网页长截图1.按F12 2.按Ctrl + Shift + P 3.输入Capture full size screenshot并回车 截取手机版长图在1、2操作之间，按下Ctrl + Shift + M 选区截图1.按F12 2.按Ctrl + Shift + C 3.选中区域后去输入Capture node screenshot并回车","categories":[{"name":"PC","slug":"PC","permalink":"https://blog.66ccff.xyz/categories/PC/"}],"tags":[{"name":"chrome","slug":"chrome","permalink":"https://blog.66ccff.xyz/tags/chrome/"}]},{"title":"科学上网 | GFW与SSR简介","slug":"GFW","date":"2019-05-31T13:52:50.000Z","updated":"2019-09-09T12:07:46.318Z","comments":true,"path":"2019/GFW/","link":"","permalink":"https://blog.66ccff.xyz/2019/GFW/","excerpt":"Across the Great Wall we can reach every corner in the world.","text":"Across the Great Wall we can reach every corner in the world. 由于一些政治原因，中国的网络环境非常特殊，不仅自身进行审查，且对外来信息也会进行审查，如果需要访问境外网站，使用一些境外服务及app则需要突破审查，俗称翻墙，科学上外，搭梯子等。在10010大进行了今年来最为严厉的网络审查，在此之后一些免费的fq软件都不甚理想。本文介绍GFW和常用的翻墙技术，以作备忘和对没有接触过fq的人作简单的了解。 推荐阅读：中国的互联网 _ neoFelhz’s Blog 墙与纸飞机 什么是GFW？出海光缆中国接入$Internet$的情况：世界海底光缆分布图 - 阮一峰的网络日志 中国出海光缆有$3$条，分别在青岛、汕头、上海，那么对为数不多的出海光缆控制一下、进行一下审查，便可以达到信息封锁的目的，这个技术的缩写叫做$GFW$，经常被称为墙，曾经由某$Hf$亲自主持建设。 GFW防火长城 - 维基百科，自由的百科全书 部分内容 现阶段防火长城已经具备干扰IPv6隧道的能力。 2013年对代码托管网站GitHub的审查和封锁 2013年1月20日，中国大陆政府的防火长城利用域名污染和关键词过滤等手段屏蔽 GitHub。但是，由于屏蔽引发了社会的强烈反应，最终解除了对GitHub的屏蔽。 Steam社区网站被屏蔽 Steam是世界最大的PC数字游戏平台，其社区网站被用于讨论和分享游戏经验。 Steam在中国也有着庞大的用户群，根据Steam Spy2017年底的报告， Steam的中国区玩家已经突破3000万，其不受中国监管的社群被认为带来了监管方面的挑战。 Steam自2015年开启人民币结算以来，曾多次因部分网民在社区发表违反中国法律的内容而遭到屏蔽， 在Valve配合删除相关违规言论并封禁违规用户后均解除了屏蔽。 但自2017年12月16日起，Steam除了商店，其他功能（社区、市场、库存、创意工坊）均被屏蔽， 方法是DNS污染和SNI RST，该屏蔽至今仍未解除，玩家需要使用加速器或在修改hosts的 同时使用本地反向代理等工具才能访问，但中国大陆部分地区的用户即使是使用了加速器或 本地反向代理，在访问社区的时候仍然会提示“您所在的地区不支持”，原因未知。 技术 主要技术 2.1 域名解析服务缓存污染 2.2 IP地址或传输层端口封锁 2.2.1 针对TCP和UDP连接的封锁 2.2.2 针对UDP连接的干扰 2.3 TCP连接重置 2.3.1 针对HTTP协议的关键字阻断 2.3.2 针对TLS的SNI阻断 2.3.3 针对TLS的证书传输检测 2.3.4 对eD2k协议的连接干扰 2.4 其他 2.4.1 对破网软件的反制 2.4.1.1 针对Tor的刺探 2.4.2 间歇性完全封锁 2.4.2.1 间歇性封锁国际出口 2.4.2.2 境内骨干路由器间歇性阻断 2.4.3 深度包检测 2.4.4 针对IPv6协议的审查 2.4.5 对电子邮件通讯的拦截 2.4.6 网络攻击 硬件 据2010年的估计，防火长城可能拥有数百台曙光4000L服务器。 防火长城（北京）使用曙光4000L机群，操作系统为Red Hat系列（从7.2到7.3到AS 4），周边软件见曙光4000L一般配置 防火长城实验室（哈尔滨工业大学）使用曙光服务器，Red Hat操作系统 防火长城（上海）使用Beowulf集群。GFW是曙光4000L的主要需求来源、 研究发起者、客户、股东、共同开发者。2007年防火长城集群规模进一步扩大， 北京增至360节点，上海增至128节点，哈尔滨增至64节点，共计552节点。 机群间星型千兆互联。计划节点数上千。 有多方证据表明防火长城（广州）存在，但其使用的服务器和系统不确定。 有理由相信防火长城（北京）拥有16套曙光4000L，每套384节点， 其中24个服务和数据库节点，360个计算节点。每套价格约两千万到三千万， 占005工程经费的主要部分。有3套（将）用于虚拟计算环境实验床，计千余节点。 13套用于骨干网络过滤。总计6144节点，12288CPU，12288GB内存， 峰值计算速度48万亿次。 2 GHz CPU的主机Linux操作系统下可达到600Kbps以上的捕包率。 通过骨干网实验，配置16个数据流总线即可以线速处理八路OC48（一路OC48约2.5Gbps） 接口网络数据。曙光4000L单结点的接入能力为每秒65万数据包，整个系统能够满足 32Gbps的实时数据流的并发接入要求。有理由相信GFW的总吞吐量为512Gbps甚至更高 （北京）。 典型意义下GFW的线路拓扑： 中华人民共和国被封锁网站列表 - 维基百科，自由的百科全书 中华人民共和国网络审查 - 维基百科，自由的百科全书 其他：面对 HTTPS 加密，GFW 的敏感词过滤失效。 其他名词VPS：虚拟专用服务器（英语：Virtual private server，缩写为 VPS）虚拟专用服务器 - 维基百科，自由的百科全书 代理（英语：Proxy）也称网络代理，是一种特殊的网络服务，允许一个网络终端（一般为客户端）通过这个服务与另一个网络终端（一般为服务器）进行非直接的连接。提供代理服务的计算机系统或其它类型的网络终端称为代理服务器（英文：Proxy Server）。代理服务器 - 维基百科，自由的百科全书 SOCKS是一种网络传输协议，主要用于客户端与外网服务器之间通讯的中间传递。SOCKS是”SOCKetS”的缩写。SOCKS - 维基百科，自由的百科全书 网际协议第6版（英语：Internet Protocol version 6，缩写：IPv6）是网际协议的最新版本，用作互联网的网络层协议。用它来取代IPv4主要是为了解决IPv4地址枯竭问题，同时它也在其他方面对于IPv4有许多改进。IPv6 - 维基百科，自由的百科全书 Secure Shell（安全外壳协议，简称SSH）是一种加密的网络传输协议，可在不安全的网络中为网络服务提供安全的传输环境。SSH通过在网络中创建安全隧道来实现SSH客户端与服务器之间的连接。Secure Shell - 维基百科，自由的百科全书 超文本传输安全协议（英语：HyperText Transfer Protocol Secure，缩写：HTTPS；常称为HTTP over TLS、HTTP over SSL或HTTP Secure）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。超文本传输安全协议 - 维基百科，自由的百科全书 对等式网络（peer-to-peer， 简称P2P），又称点对点技术，是无中心服务器、依靠用户群（peers）交换信息的互联网体系，它的作用在于，减低以往网路传输中的节点，以降低资料遗失的风险。与有中心服务器的中央网络系统不同，对等网络的每个用户端既是一个节点，也有服务器的功能，任何一个节点无法直接找到其他节点，必须依靠其户群进行信息交流。点对点网络 - 维基百科，自由的百科全书 HTTP状态码（英语：HTTP Status Code）是用以表示网页服务器超文本传输协议响应状态的3位数字代码。HTTP状态码 - 维基百科，自由的百科全书 中间人攻击（英语：Man-in-the-middle attack，缩写：MITM）在密码学和计算机安全领域中是指攻击者与通讯的两端分别创建独立的联系，并交换其所收到的数据，使通讯的两端认为他们正在通过一个私密的连接与对方直接对话，但事实上整个会话都被攻击者完全控制。在中间人攻击中，攻击者可以拦截通讯双方的通话并插入新的内容。中间人攻击 - 维基百科，自由的百科全书 如何科学上网突破网络审查 - 维基百科，自由的百科全书作为修改hosts文件这一常用手段，目前基本已经失效：hosts文件 - 维基百科，自由的百科全书 修改本机 hosts文件，不足之处是需要系统管理员权限（如root权限）来修改， 对基于IP地址封禁的网站无效。自2018年8月份起，GFW开始启用基于SNI检测 和TCP连接重置的手段进行封锁，所以修改hosts方法不再完全适用。 一些相关软件的介绍 相关软件 蓝灯（Lantern），免费（3.x以后有付费版本，免费版4.x以后版本为每月500M， 超出限速）、开源，支持多平台（Windows、Linux、Android）。 蓝灯能够自动检测一个网站是否被封锁。对那些被封锁的网站，Lantern 通过自有的服务 器或者未封锁地区的用户运行的 Lantern 来提供访问。 赛风，免费、开源，支持多平台（Windows、Android、iOS），但链接不稳定 萤火虫（Firefly），用 Go 语言编写，采取 meek 工作原理，支持多平台（Windows、Android、iOS） XXNET 浏览器集成包，为进一步降低破网难度，有志愿者将Chromium、Firefox等浏览器， 与已经配置好的翻墙软件（如GoAgent和Shadowsocks的客户端软件）一起打包成一键翻 墙的浏览器集成包。这类浏览器集成包并不能提供高度安全的隐私保护，因为浏览器集成包 的制作者可能会在制作过程中加入恶意程序。当然，这类浏览器集成包的确易于使用。 洋葱路由器（Tor），同时提供暗网及代理。 大蒜路由器（I2P），Tor的演进版本，基于Java技术，使用 ed2k 技术实现分布式网络避免全网封杀。 代理服务器 此类软件需要自行在服务器和终端上部署，比一般的翻墙方法更繁琐。 Shadowsocks，简称SS，需要自行购买VPS并搭建代理服务器，用于翻墙， 在坊间也有可以直接使用的帐号出售，还有合租一台VPS服务器的情况。 ShadowsocksR，简称SSR，其使用方式同上，增加了混淆的特性， 可使翻墙流量伪装成正常流量。 ShadowsocksRR，简称SSRR，使用方法同上，与SSR相比增加了更多的混淆方式。 Brook，跨平台，基于 GPL v3 协议授权。 V2Ray， Project V[11]项目创作的内核，使用自实现的 Vmess 协议及 mKCP 协议，基于 MIT 协议授权。 VPN虚拟专用网 - 维基百科，自由的百科全书 虚拟私人网络（英语：Virtual Private Network，缩写：VPN）是一种常用于连接 中、大型企业或团体与团体间的私人网络的通讯方法。它利用隧道协议（Tunneling Protocol）来达到保密、发送端认证、消息准确性等私人消息安全效果，这种技术可以用 不安全的网络（例如：互联网）来发送可靠、安全的消息。 隧道协议 - 维基百科，自由的百科全书 Lantern蓝灯(Lantern)最新版本下载 Latest version of Lantern 5.3.2 有关VPN的风险性工业和信息化部关于清理规范互联网网络接入服务市场的通知 - 中华人民共和国工业和信息化部 2017年1月22日，工业和信息化部发布《工业和信息化部关于清理规范互联网网络接入服务 市场的通知》，规定未经电信主管部门（各一级行政区通信管理局）批准，不得自行创建或 租用VPN、国际专线等其他信道开展跨境经营活动。而在境内VPN属于《商用密码管理条 例》须经国家密码管理局批准。这也意味着在中国大陆的ISP、IDC或CDN提供商租用或创 建VPN或国际专线开展业务，必须获取各一级行政区通信管理局的批准。 但是VPN本来的作用并不是专门干这种事的，有一定的缺陷，比如流量特征可能被GFW分析。2019年发生了第一例个人使用VPN访问境外网站受到行政处罚的事件，所以使用VPN将导致可能被查水表或请喝茶，而且面对GFW不断地升级及某些因素影响，一些特殊时间段可能会使VPN使用体验不佳。 行政处罚决定书[2019]1号 - 广东公安执法信息公开平台 2018年12月28日，广东公安执法信息公开平台公布，韶关南雄公安局发出《韶雄公(网)行 罚决字 [2019]1号》文件：朱某某被警方认为“擅自创建、使用非法定信道进行国际联 网”而被警告并被罚款1000元。这一行政处罚的依据是1996年颁布的《中华人民共和国计 算机信息网络国际联网管理暂行规定》第六条、第十四条。 SS | SSR推荐阅读：浅谈VPN和SS/SSR的区别 简介那么先来介绍一下SS与SSR：全称Shadowsocks | ShadowsocksR SS的作者Clowwindy因被喝茶而删除其GitHub的源代码，SSR是breakwa11在SS基础上开发的软件，后因某些原因作者在GitHub上将其源代码删除，二软件开发时皆开源并且原作者停止维护后有人开发并维护与更新至今。 SSsock5协议 开源项目 跨平台官网 Github SSR某已经删除的SSR主页（web archive）：breakwa11.github.io Github 简单了解一下：Shadowsocks - 维基百科，自由的百科全书 Shadowsocks（简称SS）是一种基于Socks5代理方式的加密传输协议，也可以指实现这 个协议的各种开发包。当前包使用Python、C、C++、C#、Go语言等编程语言开发，大部 分主要实现（iOS平台的除外）采用Apache许可证、GPL、MIT许可证等多种自由软件许可 协议开放源代码。Shadowsocks分为服务器端和客户端，在使用之前，需要先将服务器端 程序部署到服务器上面，然后通过客户端连接并创建本地代理。 目前这是比较主流的工具之一，使用人数多，社区比较活跃，但技术上仍并非绝对完美，目前应对GFW足已使用。使用此软件的主要原因是配置方便及社区生态较好。 在国内社交网站上为避免审查常因其缩写称为酸酸 | 酸酸乳，而因其图标为一个纸飞机，也常称此软件为小飞机、纸飞机等。对提供服务器节点供多人使用的SSR服务提供商称为“机场”。 SSR分为服务端和客户端，如果你有境外服务器的话，可以直接安装服务端，然后在客户端上使用。当然没有的话你可能需要买个VPS这种东西，当然再然后如果你不需要服务器或没有优质服务器线路及服务器的话，也可以在“机场”获取节点服务器参数来进行使用，一些机场的使用体验比廉价vps更佳。 界面： 下载有Windows、Linux、Android、IOS、Macos等系统及各种在源软件基础上开发的很多版本。 一个仍在维护的Windows版本： https://github.com/shadowsocksrr/shadowsocksr-csharp/releases 一些下载地址及版本介绍： SS/SSR 简介 教程优先阅读[ShadowsocksR] 大概是萌新也看得懂的SSR功能详细介绍&amp;使用教程 Windows的ss客户端 · 珂学上网相关知识总结 一般的机场都提供教程，也可以谷歌，不再写操作流程了。 机场浅谈部分机场（SS/SSR提供商）的使用感受 使用技巧ShadowsocksR 客户端 各种隐藏使用技巧说明 ShadowsocksR简明使用教程 小飞机的颜色 颜色 全局 PAC 直连 负载均衡 白 √ √ 青 √ 黄 √ √ 绿 √ 紫 √ √ 蓝 √ 快捷键对小飞机托盘图标操作 操作 效果 左键单击 弹出编辑服务器窗口 中键单击 弹出服务器连接统计窗 右键单击 弹出菜单 SSTap软件介绍：SSTap全称SOCKSTap, 是一款利用虚拟网卡技术在网络层实现的代理工具。SSTap能在网络层拦截所有连接并转发给HTTP，SOCKS4，5，SHADOWSOCKS代理.而无需对被代理的应用程序做任何修改或设置。它能同时转发TCP,UDP数据包，它非常适合于游戏玩家使用。 搭建一个ssr服务可以谷歌解决，如果日后有时间金钱玩vps的话，会补一个详细的教程。 V2Ray推荐阅读：浅谈vpn、vps、Proxy以及shadowsocks之间的联系和区别 比SS | SSR更先进的工具之一，用了更多的技术手段。 V2Ray 是一个模块化的代理软件包，它的目标是提供常用的代理软件模块，简化网络代理软件的开发。 简单来说，它就是一个模块化代理，可以用来科学上网，支持多平台。 Project V · Project V 官方网站 Github BrookGithub Tor官网 一些工具一个Chrome的插件 Yet another flags 可以很方便的显示服务器IP地址和地理位置。效果： 一个网站，可以测试网站是否被GFW屏蔽以及文本是否存在被审查的关键字 greatfire.org 常用服务有GFW websiteGoogle Youtube Facebook Twitter Wikipedia(zh_CN) IMTelegram 无GFW websiteQuora GitHub","categories":[{"name":"PC","slug":"PC","permalink":"https://blog.66ccff.xyz/categories/PC/"}],"tags":[{"name":"GFW","slug":"GFW","permalink":"https://blog.66ccff.xyz/tags/GFW/"},{"name":"SSR","slug":"SSR","permalink":"https://blog.66ccff.xyz/tags/SSR/"}]}]}